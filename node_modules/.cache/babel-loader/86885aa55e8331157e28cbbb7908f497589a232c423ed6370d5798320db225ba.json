{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faust\\\\OneDrive\\\\Documents\\\\GitHub\\\\lisual-dashboard\\\\my-app\\\\src\\\\ImageGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = ({\n  selectedDate\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const feedId = \"fekiizlmvw6b\";\n  const apiKey = \"HWN2M2mcbZoyFDTfpaskQV9TBDk0Ir8bu4XWDxJQiBE\";\n  const apiBaseUrl = \"https://www.teleport.io/api/v2\";\n  useEffect(() => {\n    fetchImages(selectedDate);\n  }, [selectedDate]);\n  const fetchImages = async date => {\n    setError(null);\n    const startTime = `${date.toISOString().split('T')[0]}T00:00:00Z`;\n    const endTime = `${date.toISOString().split('T')[0]}T23:59:59Z`;\n    const interval = 3600;\n    const queryUrl = `${apiBaseUrl}/frame-query?feedid=${feedId}&starttime=${startTime}&endtime=${endTime}&interval=${interval}&apikey=${apiKey}`;\n    try {\n      console.log(\"Fetching images from:\", queryUrl);\n      const response = await fetch(queryUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Received data:\", data);\n      if (!data.Frames || !Array.isArray(data.Frames)) {\n        throw new Error(\"Invalid data format received from API\");\n      }\n      const imageUrls = data.Frames.map(frameTime => ({\n        url: `${apiBaseUrl}/frame-get?feedid=${feedId}&frametime=${frameTime}&sizecode=1080p&apikey=${apiKey}`,\n        timestamp: frameTime\n      }));\n      setImages(imageUrls);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n      setError(error.message);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: [\"Error loading images: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [\"Se han encontrado \", images.length, \" imagenes para el dia \", selectedDate.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: image.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          download: image.url,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 left-2 bg-white bg-opacity-70 p-1 rounded text-xs\",\n            children: new Date(image.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: `Image ${index}`,\n            className: \"w-full h-full object-cover rounded\",\n            onError: e => {\n              console.error(`Error loading image ${index}:`, e);\n              e.target.src = 'https://via.placeholder.com/150?text=Image+Load+Error';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute bottom-2 right-2 text-white text-xl cursor-pointer\",\n            title: \"Download\",\n            children: \"\\u2B07\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"hvaUx1S99ug7gi2H++ckrz4pVTw=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageGallery","selectedDate","_s","images","setImages","error","setError","feedId","apiKey","apiBaseUrl","fetchImages","date","startTime","toISOString","split","endTime","interval","queryUrl","console","log","response","fetch","ok","Error","status","data","json","Frames","Array","isArray","imageUrls","map","frameTime","url","timestamp","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","toDateString","image","index","href","target","rel","download","Date","toLocaleTimeString","src","alt","onError","e","title","_c","$RefreshReg$"],"sources":["C:/Users/faust/OneDrive/Documents/GitHub/lisual-dashboard/my-app/src/ImageGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ImageGallery = ({ selectedDate }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const feedId = \"fekiizlmvw6b\";\r\n  const apiKey = \"HWN2M2mcbZoyFDTfpaskQV9TBDk0Ir8bu4XWDxJQiBE\";\r\n  const apiBaseUrl = \"https://www.teleport.io/api/v2\";\r\n\r\n  useEffect(() => {\r\n    fetchImages(selectedDate);\r\n  }, [selectedDate]);\r\n\r\n  const fetchImages = async (date) => {\r\n    setError(null);\r\n    const startTime = `${date.toISOString().split('T')[0]}T00:00:00Z`;\r\n    const endTime = `${date.toISOString().split('T')[0]}T23:59:59Z`;\r\n    const interval = 3600;\r\n\r\n    const queryUrl = `${apiBaseUrl}/frame-query?feedid=${feedId}&starttime=${startTime}&endtime=${endTime}&interval=${interval}&apikey=${apiKey}`;\r\n\r\n    try {\r\n      console.log(\"Fetching images from:\", queryUrl);\r\n      const response = await fetch(queryUrl);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Received data:\", data);\r\n      \r\n      if (!data.Frames || !Array.isArray(data.Frames)) {\r\n        throw new Error(\"Invalid data format received from API\");\r\n      }\r\n\r\n      const imageUrls = data.Frames.map(frameTime => ({\r\n        url: `${apiBaseUrl}/frame-get?feedid=${feedId}&frametime=${frameTime}&sizecode=1080p&apikey=${apiKey}`,\r\n        timestamp: frameTime\r\n      }));\r\n      \r\n      setImages(imageUrls);\r\n    } catch (error) {\r\n      console.error(\"Error fetching images:\", error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500\">Error loading images: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4\">Se han encontrado {images.length} imagenes para el dia {selectedDate.toDateString()}</div>\r\n      <div className=\"grid grid-cols-3 gap-4\">\r\n        {images.map((image, index) => (\r\n          <div key={index} className=\"relative\">\r\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\" download={image.url}>\r\n              <div className=\"absolute top-2 left-2 bg-white bg-opacity-70 p-1 rounded text-xs\">\r\n                {new Date(image.timestamp).toLocaleTimeString()}\r\n              </div>\r\n              <img \r\n                src={image.url} \r\n                alt={`Image ${index}`} \r\n                className=\"w-full h-full object-cover rounded\"\r\n                onError={(e) => {\r\n                  console.error(`Error loading image ${index}:`, e);\r\n                  e.target.src = 'https://via.placeholder.com/150?text=Image+Load+Error';\r\n                }}\r\n              />\r\n              <span className=\"absolute bottom-2 right-2 text-white text-xl cursor-pointer\" title=\"Download\">â¬‡</span>\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMW,MAAM,GAAG,cAAc;EAC7B,MAAMC,MAAM,GAAG,6CAA6C;EAC5D,MAAMC,UAAU,GAAG,gCAAgC;EAEnDZ,SAAS,CAAC,MAAM;IACda,WAAW,CAACT,YAAY,CAAC;EAC3B,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMS,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClCL,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMM,SAAS,GAAG,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY;IACjE,MAAMC,OAAO,GAAG,GAAGJ,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY;IAC/D,MAAME,QAAQ,GAAG,IAAI;IAErB,MAAMC,QAAQ,GAAG,GAAGR,UAAU,uBAAuBF,MAAM,cAAcK,SAAS,YAAYG,OAAO,aAAaC,QAAQ,WAAWR,MAAM,EAAE;IAE7I,IAAI;MACFU,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;MAC9C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,CAAC;MACtC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,IAAI,CAAC;MAEnC,IAAI,CAACA,IAAI,CAACE,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACE,MAAM,CAAC,EAAE;QAC/C,MAAM,IAAIJ,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MAEA,MAAMO,SAAS,GAAGL,IAAI,CAACE,MAAM,CAACI,GAAG,CAACC,SAAS,KAAK;QAC9CC,GAAG,EAAE,GAAGxB,UAAU,qBAAqBF,MAAM,cAAcyB,SAAS,0BAA0BxB,MAAM,EAAE;QACtG0B,SAAS,EAAEF;MACb,CAAC,CAAC,CAAC;MAEH5B,SAAS,CAAC0B,SAAS,CAAC;IACtB,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAACD,KAAK,CAAC8B,OAAO,CAAC;IACzB;EACF,CAAC;EAED,IAAI9B,KAAK,EAAE;IACT,oBAAON,OAAA;MAAKqC,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,wBAAsB,EAAChC,KAAK;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1E;EAEA,oBACE1C,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAKqC,SAAS,EAAC,MAAM;MAAAC,QAAA,GAAC,oBAAkB,EAAClC,MAAM,CAACuC,MAAM,EAAC,wBAAsB,EAACzC,YAAY,CAAC0C,YAAY,CAAC,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChH1C,OAAA;MAAKqC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpClC,MAAM,CAAC4B,GAAG,CAAC,CAACa,KAAK,EAAEC,KAAK,kBACvB9C,OAAA;QAAiBqC,SAAS,EAAC,UAAU;QAAAC,QAAA,eACnCtC,OAAA;UAAG+C,IAAI,EAAEF,KAAK,CAACX,GAAI;UAACc,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAACC,QAAQ,EAAEL,KAAK,CAACX,GAAI;UAAAI,QAAA,gBAChFtC,OAAA;YAAKqC,SAAS,EAAC,kEAAkE;YAAAC,QAAA,EAC9E,IAAIa,IAAI,CAACN,KAAK,CAACV,SAAS,CAAC,CAACiB,kBAAkB,CAAC;UAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACN1C,OAAA;YACEqD,GAAG,EAAER,KAAK,CAACX,GAAI;YACfoB,GAAG,EAAE,SAASR,KAAK,EAAG;YACtBT,SAAS,EAAC,oCAAoC;YAC9CkB,OAAO,EAAGC,CAAC,IAAK;cACdrC,OAAO,CAACb,KAAK,CAAC,uBAAuBwC,KAAK,GAAG,EAAEU,CAAC,CAAC;cACjDA,CAAC,CAACR,MAAM,CAACK,GAAG,GAAG,uDAAuD;YACxE;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF1C,OAAA;YAAMqC,SAAS,EAAC,6DAA6D;YAACoB,KAAK,EAAC,UAAU;YAAAnB,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG;MAAC,GAfII,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CA1EIF,YAAY;AAAAyD,EAAA,GAAZzD,YAAY;AA4ElB,eAAeA,YAAY;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
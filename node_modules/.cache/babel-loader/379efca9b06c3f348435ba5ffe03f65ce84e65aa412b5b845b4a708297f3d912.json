{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faust\\\\OneDrive\\\\Documents\\\\GitHub\\\\lisual-dashboard\\\\my-app\\\\src\\\\ImageGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = ({\n  selectedDate\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  const feedId = \"fekymxany4k4\";\n  const apiKey = \"HWN2M2mcbZoyFDTfpaskQV9TBDk0Ir8bu4XWDxJQiBE\";\n  const apiBaseUrl = \"https://www.teleport.io/api/v2\";\n  useEffect(() => {\n    fetchImages(selectedDate);\n  }, [selectedDate]);\n  const fetchImages = async date => {\n    const startTime = `${date.toISOString().split('T')[0]}T00:00:00Z`;\n    const endTime = `${date.toISOString().split('T')[0]}T23:59:59Z`;\n    const interval = 3600;\n    const queryUrl = `${apiBaseUrl}/frame-query?feedid=${feedId}&starttime=${startTime}&endtime=${endTime}&interval=${interval}&apikey=${apiKey}`;\n    try {\n      const response = await fetch(queryUrl);\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      const imageUrls = data.Frames.map(frameTime => ({\n        url: `${apiBaseUrl}/frame-get?feedid=${feedId}&frametime=${frameTime}&sizecode=1080p&apikey=${apiKey}`,\n        timestamp: frameTime\n      }));\n      setImages(imageUrls);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-3 gap-4\",\n    children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: image.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-2 left-2 bg-white bg-opacity-70 p-1 rounded text-xs\",\n          children: new Date(image.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: `Image ${index}`,\n          className: \"w-full h-32 object-cover rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute bottom-2 right-2 text-white text-xl cursor-pointer\",\n          title: \"Download\",\n          children: \"\\u2B07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageGallery","selectedDate","_s","images","setImages","feedId","apiKey","apiBaseUrl","fetchImages","date","startTime","toISOString","split","endTime","interval","queryUrl","response","fetch","ok","Error","data","json","imageUrls","Frames","map","frameTime","url","timestamp","error","console","className","children","image","index","href","target","rel","Date","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/faust/OneDrive/Documents/GitHub/lisual-dashboard/my-app/src/ImageGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ImageGallery = ({ selectedDate }) => {\r\n  const [images, setImages] = useState([]);\r\n  const feedId = \"fekymxany4k4\";\r\n  const apiKey = \"HWN2M2mcbZoyFDTfpaskQV9TBDk0Ir8bu4XWDxJQiBE\";\r\n  const apiBaseUrl = \"https://www.teleport.io/api/v2\";\r\n\r\n  useEffect(() => {\r\n    fetchImages(selectedDate);\r\n  }, [selectedDate]);\r\n\r\n  const fetchImages = async (date) => {\r\n    const startTime = `${date.toISOString().split('T')[0]}T00:00:00Z`;\r\n    const endTime = `${date.toISOString().split('T')[0]}T23:59:59Z`;\r\n    const interval = 3600;\r\n\r\n    const queryUrl = `${apiBaseUrl}/frame-query?feedid=${feedId}&starttime=${startTime}&endtime=${endTime}&interval=${interval}&apikey=${apiKey}`;\r\n\r\n    try {\r\n      const response = await fetch(queryUrl);\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n      const data = await response.json();\r\n      \r\n      const imageUrls = data.Frames.map(frameTime => ({\r\n        url: `${apiBaseUrl}/frame-get?feedid=${feedId}&frametime=${frameTime}&sizecode=1080p&apikey=${apiKey}`,\r\n        timestamp: frameTime\r\n      }));\r\n      \r\n      setImages(imageUrls);\r\n    } catch (error) {\r\n      console.error(\"Error fetching images:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4\">\r\n      {images.map((image, index) => (\r\n        <div key={index} className=\"relative\">\r\n          <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <div className=\"absolute top-2 left-2 bg-white bg-opacity-70 p-1 rounded text-xs\">\r\n              {new Date(image.timestamp).toLocaleTimeString()}\r\n            </div>\r\n            <img src={image.url} alt={`Image ${index}`} className=\"w-full h-32 object-cover rounded\" />\r\n            <span className=\"absolute bottom-2 right-2 text-white text-xl cursor-pointer\" title=\"Download\">â¬‡</span>\r\n          </a>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}